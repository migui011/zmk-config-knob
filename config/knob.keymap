#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        printscreen {
            bindings = <&kp PRINTSCREEN>;
            key-positions = <34 35>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
		 &kp ESC                                                                             &kp C_MUTE
&kp Q    &kp W  &kp E  &kp R  &kp T      &kp TAB     &kp BSPC   &kp Y      &kp U  &kp I      &kp O       &kp P
&kp A    &kp S  &kp D  &kp F  &kp G      &kp LALT    &tog 1     &kp H      &kp J  &kp K      &kp L       &kp SEMI
&kp Z    &kp X  &kp C  &kp V  &kp B                             &kp N      &kp M  &kp COMMA  &kp DOT     &kp FSLH
                              &kp LCTRL  &kp LSHIFT  &kp SPACE  &kp ENTER
            >;
        };

        num_layer {
            bindings = <
		&trans                                                                                                         	  &trans
&kp N1  &kp N2     &kp N3    &kp N4            &kp N5             &to 2   &trans  &kp N6         	&kp N7     &kp N8     &kp N9  &kp N0
&none   &kp TILDE  &kp UP    &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &trans  &to 0   &kp BACKSLASH  	&kp MINUS  &kp EQUAL  &trans  &trans
&none   &kp LEFT   &kp DOWN  &kp RIGHT         &kp LEFT_WIN                       &kp SINGLE_QUOTE  &none      &trans     &trans  &trans
                                               &trans             &trans  &trans  &trans
            >;
        };

        bt_layer {
            bindings = <
		&trans                                                                              &trans
&trans  &trans  &trans  &bt BT_SEL 0  &bt BT_SEL 1  &trans  &trans  &trans  &trans  &trans  &trans  &bt BT_CLR
&trans  &trans  &trans  &trans        &trans        &trans  &to 0   &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans        &trans                        &trans  &trans  &trans  &trans  &trans
                                      &trans        &trans  &trans  &trans
            >;
        };
    };
};